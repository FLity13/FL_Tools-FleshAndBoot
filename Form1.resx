<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>